import gradio as gr

from extraction import query_data, DEFAULT_PROMPT_TEMPLATE

# Create a Gradio interface

with gr.Blocks(theme=gr.themes.Base(), title="Audit Answering App using Vector Search + RAG") as demo:
    # Add a Markdown block with the title

    gr.Markdown(

        """ 
 
        # Audit Answering App using Atlas Vector Search + RAG Architecture 
 
        """

    )

    # Add a textbox for the user to enter their question

    textbox = gr.Textbox(label="Enter your Question:")

    # Add a textbox for the user to edit the prompt template

    prompt_template_box = gr.Textbox(label="Edit Prompt Template:", value=DEFAULT_PROMPT_TEMPLATE, lines=10)

    # Add a row with a submit button

    with gr.Row():
        button = gr.Button("Submit", variant="primary")

        # Add columns for the output textboxes

    with gr.Column():
        output2 = gr.Textbox(lines=1, max_lines=10, label="Output generated by chaining Atlas Vector Search")

        output1 = gr.Textbox(lines=1, max_lines=10, label="Output with just Atlas Vector Search")

        # Set the button click event to call the query_data function

    button.click(query_data, [textbox, prompt_template_box], outputs=[output1, output2])

# Check if the script is being run directly (not imported as a module)

if __name__ == "__main__":
    demo.launch(share=True)  # Launch the Gradio interface